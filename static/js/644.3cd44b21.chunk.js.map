{"version":3,"file":"static/js/644.3cd44b21.chunk.js","mappings":"8VAYaA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IAExBC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBb,EAAR,EAAQA,KAAMc,EAAd,EAAcA,MACd,OAAQd,GACN,IAAK,OACHC,EAAQa,GACR,MACF,IAAK,QACHX,EAASW,GACT,MACF,IAAK,WACHT,EAAYS,GAKjB,EAEKC,EAAY,mCAAG,WAAMH,GAAN,8EACnBA,EAAMI,iBADa,SAIXC,EAAO,CAAEjB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,GAJX,SAKXP,GAASqB,EAAAA,EAAAA,IAA0BD,IAAOE,SAL/B,OAMjBC,EAAAA,GAAAA,QAAc,oCAEdC,IARiB,gDAUjBD,EAAAA,GAAAA,MAAY,SAVK,yDAAH,sDAcZC,EAAY,WAChBpB,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAED,OACE,+BACE,UAACiB,EAAA,EAAD,CACEC,UAAU,OACVC,GAAI,CACFC,UAAW,OACXC,QAAS,OACTC,cAAe,SACfC,UAAW,SACXC,MAAO,QAETC,SAAUf,EACVgB,YAAU,EAVZ,WAYE,eAAIC,UAAU,QAAd,2BACA,UAACC,EAAA,EAAD,CAAOT,GAAI,CAAEK,MAAO,OAAQK,WAAY,UAAYC,QAAS,EAA7D,YACK7B,IACD,SAAC8B,EAAA,EAAD,CACEZ,GAAI,CAAEK,MAAO,OAAQQ,SAAU,QAASC,UAAW,cACnDC,SAAS,QAFX,SAIGjC,KAGL,SAACkC,EAAA,EAAD,CACER,UAAU,aACVS,GAAG,oBACHC,MAAM,OACN1C,KAAK,OACLc,MAAOd,EACP2C,SAAUhC,EACViC,UAAQ,KAEV,SAACJ,EAAA,EAAD,CACER,UAAU,aACVS,GAAG,oBACHC,MAAM,QACN1C,KAAK,QACLc,MAAOZ,EACPyC,SAAUhC,EACViC,UAAQ,KAEV,SAACJ,EAAA,EAAD,CACER,UAAU,aACVS,GAAG,0BACHC,MAAM,WACNG,KAAK,WACLC,aAAa,mBACb9C,KAAK,WACLc,MAAOV,EACPuC,SAAUhC,EACViC,UAAQ,KAGV,SAACG,EAAA,EAAD,CACEC,QAASvC,EACTwC,gBAAgB,QAChBC,WAAW,SAACC,EAAA,EAAD,IACXC,QAAQ,YACRC,SAAU5C,EACVoC,KAAK,SANP,sBAUA,0DAC+B,SAAC,KAAD,CAAMS,GAAG,SAAT,gCAMxC,C","sources":["pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { postUserRegistrationThunk } from '../../redux/operations/operationsAuth';\nimport { getError, getIsLoading } from '../../redux/selectors/authSelectors';\n\nimport { Alert, Box, Stack, TextField } from '@mui/material';\n\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport LoginIcon from '@mui/icons-material/Login';\n\nexport const RegisterPage = () => {\n  const dispatch = useDispatch();\n  // const navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const error = useSelector(getError);\n  const isLoading = useSelector(getIsLoading);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      const data = { name, email, password };\n      await dispatch(postUserRegistrationThunk(data)).unwrap();\n      toast.success('You have successfully registered');\n      // navigate('/', { replace: true });\n      resetForm();\n    } catch (error) {\n      toast.error('Error');\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <>\n      <Box\n        component=\"form\"\n        sx={{\n          marginTop: '2rem',\n          display: 'flex',\n          flexDirection: 'column',\n          textAlign: 'center',\n          width: '100%',\n        }}\n        onSubmit={handleSubmit}\n        noValidate\n      >\n        <h1 className=\"title\">Registration</h1>\n        <Stack sx={{ width: '100%', alignItems: 'center' }} spacing={2}>\n          {!!error && (\n            <Alert\n              sx={{ width: '100%', maxWidth: '450px', boxSizing: 'border-box' }}\n              severity=\"error\"\n            >\n              {error}\n            </Alert>\n          )}\n          <TextField\n            className=\"form-input\"\n            id=\"outlined-required\"\n            label=\"Name\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            required\n          />\n          <TextField\n            className=\"form-input\"\n            id=\"outlined-required\"\n            label=\"Email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            required\n          />\n          <TextField\n            className=\"form-input\"\n            id=\"outlined-password-input\"\n            label=\"Password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            required\n          />\n\n          <LoadingButton\n            loading={isLoading}\n            loadingPosition=\"start\"\n            startIcon={<LoginIcon />}\n            variant=\"contained\"\n            disabled={isLoading}\n            type=\"submit\"\n          >\n            Sign Up\n          </LoadingButton>\n          <p>\n            You already have an account? <Link to=\"/login\">Sign In!</Link>\n          </p>\n        </Stack>\n      </Box>\n    </>\n  );\n};\n"],"names":["RegisterPage","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","error","useSelector","getError","isLoading","getIsLoading","handleChange","event","target","value","handleSubmit","preventDefault","data","postUserRegistrationThunk","unwrap","toast","resetForm","Box","component","sx","marginTop","display","flexDirection","textAlign","width","onSubmit","noValidate","className","Stack","alignItems","spacing","Alert","maxWidth","boxSizing","severity","TextField","id","label","onChange","required","type","autoComplete","LoadingButton","loading","loadingPosition","startIcon","Login","variant","disabled","to"],"sourceRoot":""}