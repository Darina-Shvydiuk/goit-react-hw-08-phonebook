{"version":3,"file":"static/js/335.3b606fb9.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","import s from '../ContactForm/ContactForm.module.css';\n\nimport React, { useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { postContactsThunk } from '../../redux/operations/operationsContacts';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts);\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'phone':\n        setPhone(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const newContact = { phone, name };\n    const contactName = newContact.name.toLowerCase();\n    if (\n      contacts.find(recordName => recordName.name.toLowerCase() === contactName)\n    ) {\n      alert(`${newContact.name} is already in contacts.`);\n      return;\n    }\n    dispatch(postContactsThunk(newContact));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name:\n        <input\n          className={s.input}\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Tel:\n        <input\n          className={s.input}\n          value={phone}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={s.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import s from '../Filter/Filter.module.css';\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from '../../redux/Slice/filterSlice/filterSlice';\n\nexport const Filter = () => {\n  const [filter, setFilter] = useState('');\n  const dispatch = useDispatch();\n  const handleFilter = event => {\n    const { value } = event.target;\n    dispatch(filterContacts(value));\n    setFilter(value);\n  };\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        onChange={handleFilter}\n        value={filter}\n        type=\"text\"\n        name=\"filter\"\n        title=\" Find contacts by name\"\n      />\n    </label>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"btn\":\"ContactList_btn__6Piat\"};","import s from '../ContactList/ContactList.module.css';\nimport { useMemo, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getContactsThunk,\n  deleteContactsThunk,\n} from '../../redux/operations/operationsContacts';\nimport { Loader } from '../Loader';\nimport React from 'react';\n\nexport const ContactList = () => {\n  const { contacts } = useSelector(state => state.contacts);\n  const { filter } = useSelector(state => state);\n  const isLoading = useSelector(state => state.contacts.isLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  const filterContacts = useMemo(() => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(recordName =>\n      recordName.name.toLowerCase().includes(normalizedFilter)\n    );\n  }, [contacts, filter]);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  if (!contacts.length) {\n    return <p>Сontact list is empty</p>;\n  }\n\n  if (!filterContacts.length) {\n    return <p>Сontact not found</p>;\n  } else {\n    return (\n      <ul className={s.list}>\n        {filterContacts.map(({ id, name, phone }) => {\n          return (\n            <li key={id} className={s.item}>\n              <span className={s.name}>{name}: </span>\n              <span className={s.tel}>{phone} </span>\n              <button\n                className={s.btn}\n                type=\"button\"\n                onClick={() => dispatch(deleteContactsThunk(id))}\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactsPage_container__BnqXB\"};","import { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport s from '../ContactsPage/ContactsPage.module.css';\n\nexport const ContactsPage = () => {\n  return (\n    <div className={s.container}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n"],"names":["ContactForm","dispatch","useDispatch","contacts","useSelector","state","useState","name","setName","phone","setPhone","handleChange","event","currentTarget","value","resetForm","className","s","onSubmit","preventDefault","newContact","contactName","toLowerCase","find","recordName","alert","postContactsThunk","onChange","type","pattern","title","required","Filter","filter","setFilter","target","filterContacts","ContactList","isLoading","useEffect","getContactsThunk","useMemo","normalizedFilter","includes","Loader","length","map","id","onClick","deleteContactsThunk","ContactsPage"],"sourceRoot":""}