{"version":3,"file":"static/js/343.921eb9b0.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/selectors/contactsSelectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.jsx","../node_modules/@mui/icons-material/Delete.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\"};","export const contactsSelector = state => state.contacts.contacts;\nexport const filterSelector = state => state.filter;\nexport const isLoadingSelector = state => state.contacts.isLoading;\n","import s from '../ContactForm/ContactForm.module.css';\n\nimport React, { useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { postContactsThunk } from '../../redux/operations/operationsContacts';\nimport { contactsSelector } from '../../redux/selectors/contactsSelectors';\nimport Button from '@mui/material/Button';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelector);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const newContact = { number, name };\n    const contactName = newContact.name.toLowerCase();\n    if (\n      contacts.find(recordName => recordName.name.toLowerCase() === contactName)\n    ) {\n      alert(`${newContact.name} is already in contacts.`);\n      return;\n    }\n    dispatch(postContactsThunk(newContact));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name:\n        <input\n          className={s.input}\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Tel:\n        <input\n          className={s.input}\n          value={number}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <Button size=\"medium\" type=\"submit\" variant=\"contained\">\n        Add contact\n      </Button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import s from '../Filter/Filter.module.css';\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from '../../redux/Slice/filterSlice/filterSlice';\n\nexport const Filter = () => {\n  const [filter, setFilter] = useState('');\n  const dispatch = useDispatch();\n  const handleFilter = event => {\n    const { value } = event.target;\n    dispatch(filterContacts(value));\n    setFilter(value);\n  };\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        onChange={handleFilter}\n        value={filter}\n        type=\"text\"\n        name=\"filter\"\n        title=\" Find contacts by name\"\n      />\n    </label>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"btn\":\"ContactList_btn__6Piat\",\"name\":\"ContactList_name__UCkFW\",\"tel\":\"ContactList_tel__7uvfm\"};","import s from '../ContactList/ContactList.module.css';\nimport { useMemo, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getContactsThunk,\n  deleteContactsThunk,\n} from '../../redux/operations/operationsContacts';\nimport {\n  contactsSelector,\n  filterSelector,\n  isLoadingSelector,\n} from '../../redux/selectors/contactsSelectors';\nimport { Loader } from '../Loader';\nimport React from 'react';\n\nimport IconButton from '@mui/material/IconButton';\n// import Stack from '@mui/material/Stack';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const ContactList = () => {\n  const contacts = useSelector(contactsSelector);\n  const filter = useSelector(filterSelector);\n  const isLoading = useSelector(isLoadingSelector);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  const filterContacts = useMemo(() => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(recordName =>\n      recordName.name.toLowerCase().includes(normalizedFilter)\n    );\n  }, [contacts, filter]);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  if (!contacts.length) {\n    return <p>Сontact list is empty</p>;\n  }\n\n  if (!filterContacts.length) {\n    return <p>Сontact not found</p>;\n  } else {\n    return (\n      <ul className={s.list}>\n        {filterContacts.map(({ id, name, number }) => {\n          return (\n            <li key={id} className={s.item}>\n              <span className={s.name}>{name}: </span>\n              <span className={s.tel}>{number} </span>\n              <IconButton\n                color=\"primary\"\n                size=\"small\"\n                aria-label=\"delete\"\n                className={s.btn}\n                type=\"button\"\n                onClick={() => dispatch(deleteContactsThunk(id))}\n              >\n                <DeleteIcon fontSize=\"inherit\" />\n              </IconButton>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactsPage_container__BnqXB\"};","import { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport s from '../ContactsPage/ContactsPage.module.css';\n\nexport const ContactsPage = () => {\n  return (\n    <div className={s.container}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;"],"names":["contactsSelector","state","contacts","filterSelector","filter","isLoadingSelector","isLoading","ContactForm","dispatch","useDispatch","useSelector","useState","name","setName","number","setNumber","handleChange","event","currentTarget","value","resetForm","className","s","onSubmit","preventDefault","newContact","contactName","toLowerCase","find","recordName","alert","postContactsThunk","onChange","type","pattern","title","required","Button","size","variant","Filter","setFilter","target","filterContacts","ContactList","useEffect","getContactsThunk","useMemo","normalizedFilter","includes","Loader","length","map","id","IconButton","color","onClick","deleteContactsThunk","Delete","fontSize","ContactsPage","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}